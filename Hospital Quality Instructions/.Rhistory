if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
?as.numeric
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[as.numeric(lowest_data[,2]),]
print(lowest_data)
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",4)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[is.numeric(as.numeric(lowest_data[,2])),]
print(lowest_data)
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[lowest_data[,2]!=="Not Available",]
print(lowest_data)
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[which(lowest_data[,2]!=="Not Available"),]
print(lowest_data)
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[which(lowest_data[,2]!=="Not Available"),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
lowest_data <- lowest_data[which(lowest_data[,2]=="Not Available"),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
index <- lowest_[,2]=="Not Available"
lowest_data <- lowest_data[-index,]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
index <- lowest_data[,2]=="Not Available"
lowest_data <- lowest_data[-index,]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",4)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1],decreasing = FALSE),]
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1],decreasing = TRUE),]
tail(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",4)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
state.list <- as.character(unique(main.data[,7]))
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(state,state.list)) stop ("Invalid state")
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## Return hospital name in that state with the given rank
state.data <- subset(main.data,State == state, select=c(2,rate.col))
##valid_hospital <- order(xtfrm(as.numeric(state.data[,2])),decreasing=FALSE, na.last = NA)
##ordered_data <- state.data[valid_hospital,]
##lowest_data <- ordered_data[which(ordered_data[,2]==ordered_data[1,2]),]
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1]),]
## 30-day death rate
if (num=="best"){
head(lowest_data$Hospital.Name,1)
}else if (num =="worst"){
lowest_data <- state.data[order(as.numeric(state.data[,2]),state.data[,1],decreasing = TRUE),]
head(lowest_data$Hospital.Name,1)
}else
lowest_data[num,1]
}
rankhospital("MD","heart attack","worst")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
a <- c(1,"a",1,"a")
b <- a=="a"
b
c<- a[b,]
c<- subset(a,subset = b)
c
?split
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## For each state, find the hospital of the given rank
outcome.data <- main.data[c(2,7,rate.col),]
outcome.data[,3]<-as.numeric(outcome.data[,3])
index <- outcome.data[,3]=="Not Available"
outcome.data <- subset(outcome.data, subset = index)
state.data <- split(outcome.data,outcome.data$State, drop=TRUE)
ranking <- data.frame()
for (i in seq(state.data)){
hospitals <- state.data[[i]]
state<-head(hospitals$State,1)
hospitals <- hospitals[order(hospitals[,3],hospitals$Hospital.Name),]
if (num=="best") {
ranking <- rbind(ranking, data.frame(hospital=head(hospitals$Hospital.Name, 1), state=state))
} else if (num=="worst") {
ranking <- rbind(ranking, data.frame(hospital=tail(hospitals$Hospital.Name, 1), state=state))
} else {
ranking <- rbind(ranking, data.frame(hospital=hospitals[num, "Hospital.Name"], state=state))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
head(rankall("heart attack", 20), 10)
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome <- "heart attack"
rate.col <- 11
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome.data <- main.data[c(2,7,rate.col),]
outcome.data
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data
head(outcome.data)
outcome.data[,3]<-as.numeric(outcome.data[,3])
head(outcome.data)
index <- outcome.data[,3]=="Not Available"
index
outcome.data <- subset(outcome.data, subset = index)
head(outcome.data)
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data[,3]<-as.numeric(outcome.data[,3])
index <- outcome.data[,3]=NA
index <- outcome.data[,3] <- NA
index
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data[,3]<-as.numeric(outcome.data[,3])
index <- outcome.data[,3]==NA
head(index)
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data[,3]<-as.numeric(outcome.data[,3])
a <- na.omit(outcome.data)
head(a)
state.data <- split(outcome.data,outcome.data$State, drop=TRUE)
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data[,3]<-as.numeric(outcome.data[,3])
outcome.data <- na.omit(outcome.data)
state.data <- split(outcome.data,outcome.data$State, drop=TRUE)
state.data
ranking <- data.frame(hospitals=NULL, state=NULL, value=NULL)
class(state.data)
seq(state.data)
state.data[[i]]
state.data[[1]]
state.data[[2]]
hospitals <- state.data[[1]]
state<-head(hospitals$State,1)
state
hospitals[order(hospitals[,3],hospitals$Hospital.Name),]
hospitals <- hospitals[order(hospitals[,3],hospitals$Hospital.Name),]
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Ivan.liuyanfeng/Desktop/Data_Mining_Work_Space/datasciencecoursera/Hospital Quality Instructions/")
main.data <- read.csv("outcome-of-care-measures.csv",colClasses="character")
## Check that state and outcome are valid
outcome.list <- c("heart attack","heart failure","pneumonia")
rate.col <- c(11,17,23)
if(!is.element(outcome,outcome.list))stop ("Invalid outcome")
if(!is.element(num,c("best","worst"))&!is.numeric(num)) stop ("invalid number")
if(outcome==outcome.list[1]) rate.col = 11
if(outcome==outcome.list[2]) rate.col = 17
if(outcome==outcome.list[3]) rate.col = 23
## For each state, find the hospital of the given rank
outcome.data <- main.data[,c(2,7,rate.col)]
outcome.data[,3]<-as.numeric(outcome.data[,3])
outcome.data <- na.omit(outcome.data)
state.data <- split(outcome.data,outcome.data$State, drop=TRUE)
ranking <- data.frame(hospitals=NULL, state=NULL, value=NULL)
for (i in seq(state.data)){
hospitals <- state.data[[i]]
state<-head(hospitals$State,1)
hospitals <- hospitals[order(hospitals[,3],hospitals$Hospital.Name),]
if (num=="best") {
ranking <- rbind(ranking, data.frame(hospital=head(hospitals$Hospital.Name, 1), state=state))
} else if (num=="worst") {
ranking <- rbind(ranking, data.frame(hospital=tail(hospitals$Hospital.Name, 1), state=state))
} else {
ranking <- rbind(ranking, data.frame(hospital=hospitals[num, "Hospital.Name"], state=state))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
submit()
submit()
